version: 2.1

orbs:
  node: circleci/node@3.0.0
  slack: circleci/slack@4.0.1
  docker: circleci/docker@1.0.1

executors:
  default:
    docker:
      - image: circleci/node:14.0.0
    working_directory: ~/slc_app

jobs:
  prepare-dependencies:
    docker:
      - image: node:current-alpine
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD # context / project UI env-var reference
  install-and-build:
    executor: default
    steps:
      - checkout
      - run:
          name: Compute version number
          command: echo "0.0.${CIRCLE_BUILD_NUM}-${CIRCLE_SHA1:0:7}" | tee version.txt
      - restore_cache:
          keys:
            - yarn-deps-{{ checksum "yarn.lock" }}
            - yarn-deps
      - run:
          name: yarn install
          command: yarn install
      - save_cache:
          paths:
            - node_modules
          key: yarn-deps-{{ checksum "yarn.lock" }}-{{ epoch }}
      - store_artifacts:
          path: yarn.lock
      - persist_to_workspace:
          root: .
          paths:
            - .
      - slack/notify:
          event: fail
          template: basic_fail_1

  linting:
    executor: default
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: .
      - run:
          name: Code linting
          command: yarn run lint
      - slack/notify:
          event: fail
          template: basic_fail_1

  unit-tests:
    executor: default
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: .
      - run:
          name: Unit tests
          command: node --expose-gc ./node_modules/.bin/jest --runInBand --logHeapUsage
      - slack/notify:
          event: fail
          template: basic_fail_1

workflows:
  version: 2
  push:
    jobs:
      - install-and-build:
          context:
            - SLC-Global
      - linting:
          context:
            - SLC-Global
          requires:
            - install-and-build
      - unit-tests:
          context:
            - SLC-Global
          requires:
            - install-and-build
